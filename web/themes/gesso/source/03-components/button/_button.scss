// Component: Button

@use '00-config' as *;

.c-button,
%c-button {
  @include button($border-width: 1px, $border-radius: 4px);
  background-color: transparent;
  background-image: linear-gradient(
    to right,
    gesso-color(button, primary, background-hover) 50%,
    gesso-color(button, primary, background) 50%
  );
  margin-bottom: rem(gesso-spacing(1));

  & + & {
    margin-left: rem(gesso-spacing(1)); // LTR

    @if $support-for-rtl {
      [dir='rtl'] & {
        margin-left: 0;
        margin-right: rem(gesso-spacing(1));
      }
    }
  }

  .is-inline > & {
    margin-bottom: 0;
  }
}

// This button class is used for Drupal tabs.
.c-button--base {
  background-color: gesso-color(button, base, background);
  background-image: none;
  color: gesso-color(button, base, text);

  &:hover,
  &:focus {
    background-color: gesso-color(button, base, background-hover);
    color: gesso-color(button, base, text-hover);
  }

  &:active,
  &.is-active {
    background-color: gesso-color(button, base, background-active);
    color: gesso-color(button, base, text-active);
  }
}

// Drupal outputs this class on buttons that can delete content.
.c-button--danger {
  background-color: gesso-color(button, danger, background);
  background-image: none;
  color: gesso-color(button, danger, text);

  &:hover,
  &:focus {
    background-color: gesso-color(button, danger, background-hover);
    color: gesso-color(button, danger, text-hover);
  }

  &:active,
  &.is-active {
    background-color: gesso-color(button, danger, background-active);
    color: gesso-color(button, danger, text-active);
  }
}

// This custom button class, included as an example, is not output by Drupal by default.
.c-button--secondary {
  background-image: linear-gradient(
    to right,
    gesso-color(button, secondary, background-hover) 50%,
    gesso-color(button, secondary, background) 50%
  );
  border-color: gesso-color(button, secondary, border);
  color: gesso-color(button, secondary, text);

  &:hover,
  &:focus {
    border-color: gesso-color(button, secondary, border-hover);
    color: gesso-color(button, secondary, text-hover);
  }

  &:active,
  &.is-active {
    background-color: gesso-color(button, secondary, background-active);
    color: gesso-color(button, secondary, text-active);
  }
}

// This custom button class, included as an example, is not output by Drupal by default.
.c-button--outline {
  background-image: linear-gradient(
    to right,
    gesso-color(button, primary, background) 50%,
    rgba(0, 0, 0, 0) 50%
  );
  border-color: gesso-color(button, primary, border);
  color: gesso-color(button, primary, text-hover);

  &:hover,
  &:focus {
    color: gesso-color(button, primary, text);
  }

  &:active,
  &.is-active {
    color: gesso-color(button, primary, text);
  }
}

// This custom button class, included as an example, is not output by Drupal by default.
.c-button--outline-secondary {
  background-image: linear-gradient(
    to right,
    gesso-color(button, secondary, background) 50%,
    rgba(0, 0, 0, 0) 50%
  );
  border-color: gesso-color(button, secondary, border);
  color: gesso-color(button, secondary, text-hover);

  &:hover,
  &:focus {
    border-color: gesso-color(button, secondary, border-hover);
    color: gesso-color(button, secondary, text);
  }

  &:active,
  &.is-active {
    color: gesso-color(button, secondary, text);
  }
}

// This custom button class, included as an example, is not output by Drupal by default.
.c-button--large {
  font-size: rem(gesso-font-size(4));
  padding: rem(gesso-spacing(2)) rem(gesso-spacing(5));
}

// This custom button class, included as an example, is not output by Drupal by default.
.c-button--small,
%c-button--small {
  font-size: rem(gesso-font-size(1));
  padding: rem(gesso-spacing(0.5)) rem(gesso-spacing(1));
}

.c-button--chevron {
  &::after {
    background-image: url('images/backgrounds/chevron-white.svg');
    background-position: center;
    background-repeat: no-repeat;
    background-size: 7px auto;
    content: '';
    display: inline-block;
    height: 20px;
    margin-left: 10px;
    vertical-align: bottom;
    width: 20px;
  }

  &:hover,
  &:focus {
    &::after {
      filter: invert(1);
    }
  }
}
